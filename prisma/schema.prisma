datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
  // previewFeatures = []
}

generator dbml {
  provider = "prisma-dbml-generator"
}

model User {
  id        String   @id @default(cuid())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  account   String   @unique
  password  String
  name      String?
  role      Role?    @relation(fields: [roleId], references: [id], onDelete: SetNull, onUpdate: SetNull)
  roleId    String?
}

model Menu {
  id         String         @id @default(cuid())
  parentId   String?
  createdAt  DateTime       @default(now())
  updatedAt  DateTime       @updatedAt
  title      String
  key        String         @unique
  remark     String?
  enabled    Boolean?       @default(true)
  breadcrumb Boolean?       @default(false)
  ignore     Boolean?       @default(false)
  roles      MenusOnRoles[]
}

model Role {
  id        String         @id @default(cuid())
  title     String
  key       String         @unique
  createdAt DateTime       @default(now())
  updatedAt DateTime       @updatedAt
  users     User[]
  menus     MenusOnRoles[]
}

model MenusOnRoles {
  role   Role   @relation(fields: [roleId], references: [id])
  roleId String
  menu   Menu   @relation(fields: [menuId], references: [id])
  menuId String

  @@id([roleId, menuId])
}

model Specifications {
  id             String   @id @default(cuid())
  // 款号
  styleCode      String?
  // 款号
  styleCodeId    String?
  // 圈号
  circleNumber   String?
  circleNumberId String?
  // 件重
  singleWeight   String?
  singleWeightId String?
  // 品类
  category       String?
  categoryId     String?
  createdAt      DateTime @default(now())
  updatedAt      DateTime @updatedAt

  orderDetails OrderDetail[]
}

model Customer {
  id            String   @id @default(cuid())
  // 客户名称
  name          String?
  // 客户联系方式
  telephone     String?
  // 联系人名字
  contactsName  String?
  // 联系人电话
  contactsPhone String?
  // 客户编号
  customerCode  String?  @unique
  createdAt     DateTime @default(now())
  updatedAt     DateTime @updatedAt

  orders Order[]
}

model Employee {
  id           String   @id @default(cuid())
  name         String?
  age          Int?
  employeeCode String?  @unique
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt
  sex          String?
  // 状态 启用停用
  enabled      Boolean? @default(true)
  // 备注
  remark       String?
}

model Dictionary {
  id      String   @id @default(cuid())
  // 字典名
  title   String?
  // 字典编码
  key     String?  @unique
  // 状态 启用停用
  enabled Boolean? @default(true)
  // 排序
  sort    Int?
  // 备注
  remark  String?

  dictItems DictionaryItem[]
  createdAt DateTime         @default(now())
  updatedAt DateTime         @updatedAt
}

model DictionaryItem {
  id        String      @id @default(cuid())
  createdAt DateTime    @default(now())
  updatedAt DateTime    @updatedAt
  // 字典名称Id
  dict      Dictionary? @relation(fields: [dictId], references: [id], onDelete: SetNull, onUpdate: SetNull)
  dictId    String?
  // 行编码
  itemKey   String?     @unique
  // 名称
  title     String?
  // 状态 启用停用
  enabled   Boolean?    @default(true)
  // 排序
  sort      Int?
  // 备注
  remark    String?
}

model Order {
  id           String        @id @default(cuid())
  orderNumber  String        @unique
  createdAt    DateTime      @default(now())
  updatedAt    DateTime      @updatedAt
  // 其他订单信息
  orderDetails OrderDetail[]
  customer     Customer?     @relation(fields: [customerId], references: [id], onDelete: SetNull, onUpdate: SetNull)
  customerId   String?
}

model OrderDetail {
  id         String  @id @default(cuid())
  // 件数
  quantity   Int
  // 单位
  unit       String
  unitPrice  Decimal
  totalPrice Decimal

  order   Order?  @relation(fields: [orderId], references: [id], onDelete: SetNull, onUpdate: SetNull)
  orderId String?

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  specifications Specifications[]
}
